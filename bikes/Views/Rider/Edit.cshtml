@using Bikes.Model.Banking;
@using System.Drawing;
@model RiderVM
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_MainLayout.cshtml";
}

@section HEAD {

<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>

<script>

    //create the angular application for the page
    var app = angular.module("riderApp", []);

    //create the page controller
    app.controller("riderController", ["$scope", "$http", function ($scope, $http) {
        $scope.bank = {
            branchId: "@Model.bankBranchId",
            customerId: "@Model.bankCustomerId",
            accountId: "@Model.bankAccountId"
        };

        $scope.branches = [];
        $scope.customers = [];
        $scope.accounts = [];

        $scope.getBranches = function () {
            $http
            .get("/api/bankbranch")
            .then(
                function (response) {
                    var found = false;

                    response.data.forEach(function (option) {
                        if (option.id == $scope.bank.branchId) {
                            found = true;
                        }
                    });

                    if (found === false) {
                        $scope.bank.branchId = "@Bank.DefaultBranchId";
                    }
                    $scope.branches = response.data;
                },
                function (reponse) {
                    $scope.branches = [{id : 0, name : "error getting branch list"}];
                }
            );
        };

        $scope.getCustomers = function (branchId) {
            $http
            .get("/api/bankcustomer/" + branchId)
            .then(
                function (response) {
                    var found = false;

                    response.data.forEach(function (option) {
                        if (option.id == $scope.bank.customerId) {
                            found = true;
                        }
                    });

                    if (found === false) {
                        $scope.bank.customerId = "@Bank.DefaultCustomerId";
                    }
                    $scope.customers = response.data;
                },
                function (reponse) {
                    $scope.customers = [{ id: 0, name: "error getting customer list" }];
                }
            );
        };

        $scope.getAccounts = function (customerId) {
            $http
            .get("/api/bankaccount/" + customerId)
            .then(
                function (response) {
                    var found = false;

                    response.data.forEach(function (option) {
                        if (option.id == $scope.bank.accountId) {
                            found = true;
                        }
                    });

                    if (found === false) {
                        $scope.bank.accountId = "@Bank.DefaultAccountId";
                    }
                    $scope.accounts = response.data;
                },
                function (reponse) {
                    $scope.accounts = [{ id: 0, name: "error getting account list" }];
                }
            );
        };

        $scope.$watch('bank.branchId', function () {
            $scope.getCustomers($scope.bank.branchId);
        });

        $scope.$watch('bank.customerId', function () {
            $scope.getAccounts($scope.bank.customerId);
        });

        $scope.getBranches();
    }]);

</script>
}

<div class="page-header">
    <h2>Edit Rider</h2>
</div>

<div data-ng-app="riderApp" data-ng-controller="riderController">
    @using (Html.BeginForm("Command", "Rider", FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.name)
            @Html.EditorFor(m => m.name, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.rate)
            @Html.EditorFor(m => m.rate, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            <label>Chart colour </label>
            <select id="colorSelector" name="chartColor" class="form-control">
                @foreach (Color color in Model.colorList)
                {
                    <option 
                        value="@ColorTranslator.ToHtml(color)" 
                        style="color:@ColorTranslator.ToHtml(color)"
                        @(ColorTranslator.ToHtml(color) == Model.chartColor ? "selected" : "")>
                        @color.Name
                    </option>
                }
                <option value="#A0522D" data-color="#A0522D">sienna</option>
            </select>
        </div>            

        <div class="form-group">
            <label for="branchSelect">Bank</label>
            @*<select ng-model="bank.branchId" data-ng-options="b.id as b.name for b in branches track by b.id" class="form-control" >
                </select>*@

            <select id="branchSelect" ng-model="bank.branchId" class="form-control">
                <option value="@Bank.DefaultBranchId">none</option>
                <option ng-repeat="option in branches" value="{{option.id}}">{{option.name}}</option>
            </select>
        </div>

        <div class="form-group">
            <label for="customerSelect">Bank username</label>
            @*<select ng-model="bank.customerId" data-ng-options="c.id as c.name for c in customers track by c.id" class="form-control">
                </select>*@

            <select id="customerSelect" ng-model="bank.customerId" class="form-control">
                <option value="@Bank.DefaultCustomerId">none</option>
                <option ng-repeat="option in customers" value="{{option.id}}">{{option.name}}</option>
            </select>

        </div>

        <div class="form-group">
            <label for="accountSelect">Bank account</label>
            @*<select ng-model="bank.accountId" data-ng-options="a.id as a.name for a in accounts track by a.id" class="form-control">
                </select>*@

            <select id="accountSelect" ng-model="bank.accountId" class="form-control">
                <option value="@Bank.DefaultAccountId">none</option>
                <option ng-repeat="option in accounts" value="{{option.id}}">{{option.name}}</option>
            </select>

        </div>

        <div>Branch = {{bank.branchId}}</div>
        <div>Customer = {{bank.customerId}}</div>
        <div>Account = {{bank.accountId}}</div>

        <div class="form-group">
            <input type="hidden" name="id" value="@Model.id" />

            <input type="hidden" name="bankBranchId" ng-value="bank.branchId" />
            <input type="hidden" name="bankCustomerId" ng-value="bank.customerId" />
            <input type="hidden" name="bankAccountId" ng-value="bank.accountId" />

            <button type="submit" class="btn btn-default" name="command" value="save">Submit</button>
            <button type="submit" class="cancel btn btn-default" name="command" value="cancel">Cancel</button>
            <button type="submit" class="cancel btn btn-default" name="command" value="delete" onclick="return confirm('Are you sure oyu want to delete this item?')">Remove</button>
        </div>
    }
</div>