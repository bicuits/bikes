@model RiderVM
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_MainLayout.cshtml";
}

<div class="page-header">
    <h2>Edit Rider</h2>
</div>

@using (Html.BeginForm("Command", "Rider", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(m => m.name)
        @Html.EditorFor(m => m.name, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.rate)
        @Html.EditorFor(m => m.rate, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <label>Chart colour </label>
    <div class="form-group form-inline">
        @Html.LabelFor(m => m.red)
        @Html.EditorFor(m => m.red, new { htmlAttributes = new { @class = "form-control" } })
        @Html.LabelFor(m => m.green)
        @Html.EditorFor(m => m.green, new { htmlAttributes = new { @class = "form-control" } })
        @Html.LabelFor(m => m.blue)
        @Html.EditorFor(m => m.blue, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.bankUsername)
        @Html.EditorFor(m => m.bankUsername, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.bankAccountNumber)
        @Html.EditorFor(m => m.bankAccountNumber, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.HiddenFor(m => m.id)
        <button type="submit" class="btn btn-default" name="command" value="save">Submit</button>
        <button type="submit" class="btn btn-default" name="command" value="cancel">Cancel</button>
        <button type="submit" class="btn btn-default" name="command" value="delete" onclick="return confirm('Are you sure oyu want to delete this item?')">Remove</button>
    </div>
}
